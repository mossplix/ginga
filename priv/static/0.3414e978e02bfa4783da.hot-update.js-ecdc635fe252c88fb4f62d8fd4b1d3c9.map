{"version":3,"sources":["webpack:///./web/static/js/app/app.js?2db7"],"names":[],"mappings":"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","file":"0.3414e978e02bfa4783da.hot-update.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  Router,\n  useRouterHistory,\n    browserHistory\n} from 'react-router';\n//import AppRoutes from './AppRoutes';\nimport configRoutes from './routes';\nimport injectTapEventPlugin from 'react-tap-event-plugin';\nimport {createHashHistory} from 'history';\nimport configureStore           from './store';\n\n\n\n\n\n\nvar localStorage = require('localStorage');\n\nvar _ = require('lodash');\nvar async = require('async');\nvar StanzaIO = require('stanza.io');\n\nvar Storage = require('./storage');\nvar xmppEventHandlers = require('./helpers/xmppEventHandlers');\nvar pushNotifications = require('./helpers/pushNotifications');\nvar Notify = require('notify.js');\nvar Desktop = require('./helpers/desktop');\nvar AppCache = require('./helpers/cache');\nvar AppState = require('./stores/stateStore');\nvar userStore = require('./stores/userStore');\nvar contactUtils = require('./utils/contactUtils');\nvar crypto = require('crypto');\nvar ChatWebAPIUtils = require('./utils/ChatWebAPIUtils');\n\nvar MessageSchema = require(\"./stores/schema/message\");\nvar jQuery=require('jquery');\nvar request = require('superagent');\nrequire('superagent-as-promised')(request);\nvar Backbone = require('backbone');\nimport { syncHistoryWithStore } from 'react-router-redux';\n//var injectTapEventPlugin = require(\"react-tap-event-plugin\");\n\nvar moment = require(\"moment\");\nimport { Provider }                 from 'react-redux';\n\nconst store = configureStore(browserHistory);\nconst history = syncHistoryWithStore(browserHistory, store);\n\n\n\n\n//ChatExampleData.init(); // load example data into localstorage\n\n//ChatWebAPIUtils.getAllMessages();\n\n//Helpers for debugging\nwindow.React = React;\nwindow._=_;\nwindow.Perf = require('react-addons-perf');\nwindow.moment=moment;\n\n//Needed for onTouchTap\n//Can go away when react 1.0 release\n//Check this repo:\n//https://github.com/zilverline/react-tap-event-plugin\ninjectTapEventPlugin();\n\n\n\n\nvar exports = {\n    launch: function () {\n        var self = window.app = this;\n        var config = {\n            jid: \"mossplix@localhost\",\n            wsURL: \"ws://127.0.0.1:5280/websocket\",\n            transport: \"websocket\",\n            nickname: \"mmoses\",\n            credentials: {\n                password: \"mosespass\"\n            }};\n        localStorage.config = JSON.stringify(config);\n\n        //localStorage.mucs  = JSON.stringify(muc_list);\n        app.jid=app.me=config.jid;\n        app.config=config;\n        window._=_;\n        window.request = request;\n\n\n\n        config.useStreamManagement = true;\n\n        _.extend(this, Backbone.Events);\n\n        var profile = {};\n        async.series([\n            function (cb) {\n                app.notifications = new Notify();\n                app.desktop = new Desktop();\n                app.cache = new AppCache();\n                app.storage = new Storage();\n                app.storage.open(cb);\n                app.crypto=crypto;\n                window.MessageSchema=MessageSchema;\n            },\n            function (cb) {\n                app.storage.profiles.get(config.jid, function (err, res) {\n                    if (res) {\n                        profile = res;\n                        profile.jid = {full: config.jid, bare: config.jid};\n                        config.rosterVer = res.rosterVer;\n                    }\n                    cb();\n                });\n            },\n            function (cb) {\n\n                window.onbeforeunload = function () {\n                    if (app.api.sessionStarted) {\n                        app.api.disconnect();\n                    }\n                };\n\n                self.api = window.client = StanzaIO.createClient(config);\n                client.enableKeepAlive({interval:30});\n                client.use(pushNotifications);\n                xmppEventHandlers(self.api, self);\n\n\n                self.api.once('session:started', function () {\n                    app.hasConnected = true;\n                    cb();\n                });\n                self.api.connect();\n\n\n            },\n            function (cb) {\n\n                ChatWebAPIUtils.getAllMessages();\n                ChatWebAPIUtils.getAllChannels();\n\n\n\n\n\n\n\n\n            }\n        ]);\n  }\n\n};\n\n\n\n\n\nexports.launch();\n\n\n  ReactDOM.render(\n\n      <Provider store={store}>\n                      <Router\n                        history= {history}\n                        onUpdate={() => window.scrollTo(0, 0)}\n                      >\n                        {configRoutes(store)}\n                      </Router>\n    </Provider>\n                    , document.getElementById('app_container'));\n\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./web/static/js/app/app.js\n **/"],"sourceRoot":""}