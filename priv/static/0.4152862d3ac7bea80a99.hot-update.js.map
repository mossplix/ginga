{"version":3,"sources":["webpack:///./web/static/js/app/components/chat/ChatApp.react.js?5c29","webpack:///./web/static/js/app/components/chat/MessageComposer.react.js?efe1","webpack:///./web/static/js/app/components/chat/suggestion/suggestion_box.jsx?169e","webpack:///./web/static/js/app/selectors/index.js?7208","webpack:///./web/static/js/app/reducers/index.js?6d28","webpack:///./web/static/js/app/reducers/suggestionsReducer.js?166e"],"names":[],"mappings":"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","file":"0.4152862d3ac7bea80a99.hot-update.js","sourcesContent":["\nimport  MessageSection from './MessageSection.react';\nvar React = require('react');\nimport ThreadSection from './ThreadSection.react';\nimport ChannelSection from './channels/ChannelSection.react';\nimport MessageComposer from './MessageComposer.react';\n\nimport * as  ChatActions from '../../actions/chatActions';\n\nimport { bindActionCreators } from 'redux'\n\nimport { connect } from 'react-redux'\n\nimport {currentThreadMessagesSelector,selectedSuggestionSelector} from '../../selectors';\n\nimport Paper from 'material-ui/paper';\n\nvar ChatApp = React.createClass({\n\n      propTypes: {\n       messages: React.PropTypes.array.isRequired,\n       actions: React.PropTypes.object.isRequired,\n       router: React.PropTypes.object.isRequired\n  },\n\n  contextTypes: {\n    router: React.PropTypes.object.isRequired,\n  },\n    handleUpdateSelectedIndex(event, index) {\n      this.setState({\n        selectedIndex: index,\n      });\n    },\n\n\n  render: function() {\n      const {messages,actions,channels,threads,currentChat,dispatch,threadMessages,location,currentSuggestion,selectedSuggestion} = this.props;\n    return (\n      <div className=\"layer-container\">\n          <div className=\" fade in active\" id=\"messages\">\n\n\n          <div className=\"col-md-4\">\n           <Paper zDepth={2}>\n\n\n                          <ChannelSection location={location} actions={actions} channels={channels} currentChat={currentChat} dispatch={dispatch} />\n                          <ThreadSection location={location}  actions={actions} threads={threads} currentChat={currentChat} dispatch={dispatch} />\n\n              </Paper>\n\n\n\n              </div>\n\n          <div className=\"col-md-8\">\n\n        <MessageSection actions={actions} messages={messages} currentChat={currentChat} threadMessages={threadMessages} />\n           <MessageComposer currentChat={currentChat}  actions={actions} currentSuggestion={currentSuggestion} selectedSuggestion={selectedSuggestion}/>\n              </div>\n      </div>\n          </div>\n\n\n\n\n    );\n  }\n\n});\n\n\n\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(ChatActions, dispatch),\n      dispatch:dispatch\n  }\n}\n\n\nconst mapStateToProps = (state,ownProps) => ({\n    messages: state.messages,\n    currentMessage: state.currentMessage,\n    channels: state.rooms,\n    contacts: state.contacts,\n    currentChat: state.currentChat,\n    threads:state.threads,\n    location: ownProps.location,\n    threadMessages: currentThreadMessagesSelector(state),\n    selectedSuggestion: selectedSuggestionSelector(state),\n    currentSuggestion: state.currentSuggestion\n\n});\n\n\n\nexport default connect(mapStateToProps,  mapDispatchToProps)(ChatApp);\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./web/static/js/app/components/chat/ChatApp.react.js\n **/","\nimport { connect } from 'react-redux'\nvar React = require('react');\nvar ENTER_KEY_CODE = 13;\n\nimport $ from 'jquery';\nimport AtMentionProvider from './suggestion/at_mention_provider';\nimport CommandProvider from './suggestion/command_provider';\nimport EmoticonProvider from './suggestion/emoticon_provider';\nimport SuggestionList from './suggestion/suggestion_list';\nimport SuggestionBox from './suggestion/suggestion_box';\n\nimport * as TextFormatting from '../../utils/text_formatting';\n\nconst PreReleaseFeatures = Constants.PRE_RELEASE_FEATURES;\n\nimport {intlShape, injectIntl, defineMessages, FormattedHTMLMessage,FormattedMessage} from 'react-intl';\n\n\nconst Preferences = Constants.Preferences;\nconst TutorialSteps = Constants.TutorialSteps;\nconst ActionTypes = Constants.ActionTypes;\n\n\nimport MsgTyping from './msg_typing.jsx';\n\nimport FileUpload from './files/file_upload.jsx';\nimport FilePreview from './files/file_preview.jsx';\n\nimport TutorialTip from '../tutorial/tutorial_tip';\nimport * as ChatActions from '../../actions/chatActions';\nimport * as Utils from '../../utils/general';\nimport Constants from '../../constants/chat_constants';\n\n\nvar  KeyCodes = require(\"../../utils/keyCode\");\n\nconst holders = defineMessages({\n    comment: {\n        id: 'create_post.comment',\n        defaultMessage: 'Comment',\n        description: \"comment\"\n    },\n    post: {\n        id: 'create_post.post',\n        defaultMessage: 'Post',\n         description: \"post\"\n    },\n    write: {\n        id: 'create_post.write',\n        defaultMessage: 'Write a message...',\n         description: \"message\"\n    }\n});\n\n\n\n\nvar MessageComposer = React.createClass({\n\n\n  getInitialState: function() {\n      const draft = this.getCurrentDraft();\n    return {messageText: '',\n            channelId: this.props.currentChat.id,\n            messageText: draft.messageText,\n            uploadsInProgress: draft.uploadsInProgress,\n            previews: draft.previews,\n            submitting: false,\n            initialText: draft.messageText,\n            ctrlSend: false,\n            showTutorialTip: false,\n            showPostDeletedModal: false\n\n\n    };\n  },\n\n\n\n   getFileCount(channelId) {\n\n   },\n    handleSubmit(e) {\n        e.preventDefault();\n\n        if (this.state.uploadsInProgress.length > 0 || this.state.submitting) {\n            return;\n        }\n\n        const post = {};\n        post.filenames = [];\n        post.message = this.state.messageText;\n\n        if (post.message.trim().length === 0 && this.state.previews.length === 0) {\n            return;\n        }\n\n\n        this.setState({submitting: true, serverError: null});\n\n        if (post.message.indexOf('/') === 0) {\n            /*Client.executeCommand(\n                this.state.channelId,\n                post.message,\n                false,\n                (data) => {\n                    PostStore.storeDraft(this.state.channelId, null);\n                    this.setState({messageText: '', submitting: false, postError: null, previews: [], serverError: null});\n\n                    if (data.goto_location && data.goto_location.length > 0) {\n                        browserHistory.push(data.goto_location);\n                    }\n                },\n                (err) => {\n                    if (err.sendMessage) {\n                        this.sendMessage(post);\n                    } else {\n                        const state = {};\n                        state.serverError = err.message;\n                        state.submitting = false;\n                        this.setState(state);\n                    }\n                }\n            );*/\n        } else {\n            this.sendMessage(post);\n        }\n    },\n    sendMessage(post) {\n            post.channel_id = this.state.channelId;\n            post.filenames = this.state.previews;\n\n            const time = Utils.getTimestamp();\n            const userId = store.getState.session.currentUser.id;\n            post.pending_post_id = `${userId}:${time}`;\n            post.user_id = userId;\n            post.create_at = time;\n            post.parent_id = this.state.parentId;\n\n            const channel = this.props.currentChat.channel;\n\n            //ChatActions.emitUserPostedEvent(post);\n\n            this.setState({messageText: '', submitting: false, postError: null, previews: [], serverError: null});\n\n\n        },\n    postMsgKeyPress(e) {\n            if (this.state.ctrlSend && e.ctrlKey || !this.state.ctrlSend) {\n                if (e.which === KeyCodes.ENTER && !e.shiftKey && !e.altKey) {\n                    e.preventDefault();\n                    ReactDOM.findDOMNode(this.refs.textbox).blur();\n                    this.handleSubmit(e);\n                }\n            }\n\n            //ChatActions.emitLocalUserTypingEvent(this.state.channelId, '');\n        },\n    removePreview(id) {\n            const previews = Object.assign([], this.state.previews);\n            const uploadsInProgress = this.state.uploadsInProgress;\n\n            // id can either be the path of an uploaded file or the client id of an in progress upload\n            let index = previews.indexOf(id);\n            if (index === -1) {\n                index = uploadsInProgress.indexOf(id);\n\n                if (index !== -1) {\n                    uploadsInProgress.splice(index, 1);\n                    this.refs.fileUpload.getWrappedInstance().cancelUpload(id);\n                }\n            } else {\n                previews.splice(index, 1);\n            }\n\n            const draft = {};//PostStore.getCurrentDraft();\n            draft.previews = previews;\n            draft.uploadsInProgress = uploadsInProgress;\n            //PostStore.storeCurrentDraft(draft);\n\n            this.setState({previews, uploadsInProgress});\n        },\n       handleUserInput(messageText) {\n        this.setState({messageText});\n\n    },\n   handleUploadClick() {\n        this.focusTextbox();\n    },\n    handleUploadStart(clientIds, channelId) {\n        const draft = PostStore.getDraft(channelId);\n\n        draft.uploadsInProgress = draft.uploadsInProgress.concat(clientIds);\n        PostStore.storeDraft(channelId, draft);\n\n        this.setState({uploadsInProgress: draft.uploadsInProgress});\n\n        // this is a bit redundant with the code that sets focus when the file input is clicked,\n        // but this also resets the focus after a drag and drop\n        this.focusTextbox();\n    },\n    handleFileUploadComplete(filenames, clientIds, channelId) {\n        const draft = PostStore.getDraft(channelId);\n\n        // remove each finished file from uploads\n        for (let i = 0; i < clientIds.length; i++) {\n            const index = draft.uploadsInProgress.indexOf(clientIds[i]);\n\n            if (index !== -1) {\n                draft.uploadsInProgress.splice(index, 1);\n            }\n        }\n\n        draft.previews = draft.previews.concat(filenames);\n        PostStore.storeDraft(channelId, draft);\n\n        this.setState({uploadsInProgress: draft.uploadsInProgress, previews: draft.previews});\n    },\n     handleUploadClick() {\n        this.focusTextbox();\n    },\n    handleUploadError(err, clientId) {\n        let message = err;\n        if (message && typeof message !== 'string') {\n            // err is an AppError from the server\n            message = err.message;\n        }\n\n        if (clientId !== -1) {\n            const draft = PostStore.getDraft(this.state.channelId);\n\n            const index = draft.uploadsInProgress.indexOf(clientId);\n            if (index !== -1) {\n                draft.uploadsInProgress.splice(index, 1);\n            }\n\n            PostStore.storeDraft(this.state.channelId, draft);\n\n            this.setState({uploadsInProgress: draft.uploadsInProgress});\n        }\n\n        this.setState({serverError: message});\n    },\n\n\n        getCurrentDraft() {\n        const draft = null;\n        const safeDraft = {previews: [], messageText: '', uploadsInProgress: []};\n\n        if (draft) {\n            if (draft.message) {\n                safeDraft.messageText = draft.message;\n            }\n            if (draft.previews) {\n                safeDraft.previews = draft.previews;\n            }\n            if (draft.uploadsInProgress) {\n                safeDraft.uploadsInProgress = draft.uploadsInProgress;\n            }\n        }\n\n        return safeDraft;\n    },\n    handleKeyDown(e) {\n        if (this.state.ctrlSend && e.keyCode === KeyCodes.ENTER && e.ctrlKey === true) {\n            this.postMsgKeyPress(e);\n            return;\n        }\n\n        if (e.keyCode === KeyCodes.UP && this.state.messageText === '') {\n            e.preventDefault();\n\n            const channelId = this.props.currentChat.id;\n            const lastPost = this.props.message.lastPost;\n            if (!lastPost) {\n                return;\n            }\n            const {formatMessage} = this.props.intl;\n            var type = (lastPost.root_id && lastPost.root_id.length > 0) ? formatMessage(holders.comment) : formatMessage(holders.post);\n\n            store.dispatch({\n                        type: ActionType.MESSAGE_CREATED_EDITED,\n                        refocusId: '#post_textbox',\n                         title: type,\n                         message: lastPost.message,\n                         postId: lastPost.id,\n                         channelId: lastPost.channel_id,\n                        });\n\n        }\n    },\n\n createTutorialTip() {\n        const screens = [];\n\n        screens.push(\n            <div>\n                <FormattedHTMLMessage\n                    id='create_post.tutorialTip'\n                    defaultMessage='<h4>Sending Messages</h4><p>Type here to write a message and press <strong>Enter</strong> to post it.</p><p>Click the <strong>Attachment</strong> button to upload an image or a file.</p>'\n                />\n            </div>\n        );\n\n        return (\n            <TutorialTip\n                placement='top'\n                screens={screens}\n                overlayClass='tip-overlay--chat'\n            />\n        );\n    },\n\n  render: function() {\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div className='has-error'>\n                    <label className='control-label'>{this.state.serverError}</label>\n                </div>\n            );\n        }\n\n         let postError = null;\n        if (this.state.postError) {\n            postError = <label className='control-label'>{this.state.postError}</label>;\n        }\n\n        let preview = null;\n        if (this.state.previews.length > 0 || this.state.uploadsInProgress.length > 0) {\n            preview = (\n                <FilePreview\n                    files={this.state.previews}\n                    onRemove={this.removePreview}\n                    uploadsInProgress={this.state.uploadsInProgress}\n                />\n            );\n        }\n        let postFooterClassName = 'post-create-footer';\n        if (postError) {\n            postFooterClassName += ' has-error';\n        }\n\n       const hasText = this.state.messageText.length > 0;\n\n        let previewLink = null;\n        if (Utils.isFeatureEnabled(PreReleaseFeatures.MARKDOWN_PREVIEW)) {\n            previewLink = (\n                <a\n                    onClick={this.showPreview}\n                    className='textbox-preview-link'\n                >\n                    {this.state.preview ? (\n                        <FormattedMessage\n                            id='textbox.edit'\n                            defaultMessage='Edit message'\n                        />\n                    ) : (\n                        <FormattedMessage\n                            id='textbox.preview'\n                            defaultMessage='Preview'\n                        />\n                    )}\n                </a>\n            );\n        };\n        const helpText = (\n            <div\n                style={{visibility: hasText ? 'visible' : 'hidden', opacity: hasText ? '0.3' : '0'}}\n                className='help__format-text'\n            >\n                <b>\n                    <FormattedMessage\n                        id='textbox.bold'\n                        defaultMessage='**bold**'\n                    />\n                </b>\n                <i>\n                    <FormattedMessage\n                        id='textbox.italic'\n                        defaultMessage='_italic_'\n                    />\n                </i>\n                <span>\n                    {'~~'}\n                    <strike>\n                        <FormattedMessage\n                            id='textbox.strike'\n                            defaultMessage='strike'\n                        />\n                    </strike>\n                    {'~~ '}\n                </span>\n                <code>\n                    <FormattedMessage\n                        id='textbox.inlinecode'\n                        defaultMessage='`inline code`'\n                    />\n                </code>\n                <code>\n                    <FormattedMessage\n                        id='textbox.preformatted'\n                        defaultMessage='```preformatted```'\n                    />\n                </code>\n                <span>\n                    <FormattedMessage\n                        id='textbox.quote'\n                        defaultMessage='>quote'\n                    />\n                </span>\n            </div>\n        );\n       let tutorialTip = null;\n        if (this.state.showTutorialTip) {\n            tutorialTip = this.createTutorialTip();\n        };\n\n    return (\n\n            <div>\n\n\n            <div  ref='wrapper'  className='textarea-wrapper' >\n                <SuggestionBox\n                    ref='message'\n                    currentSuggestion={currentSuggestion}\n                    className={`form-control custom-textarea ${this.state.connection}`}\n                    type='textarea'\n                    spellCheck='true'\n                    autoComplete='off'\n                    autoCorrect='off'\n                    maxLength={Constants.MAX_POST_LEN}\n                    placeholder={\"compose\"}\n                    value={this.state.messageText}\n                    onUserInput={this.props.onUserInput}\n                    onKeyPress={this.handleKeyPress}\n                    onKeyDown={this.handleKeyDown}\n                    onHeightChange={this.handleHeightChange}\n                    style={{visibility: this.state.preview ? 'hidden' : 'visible'}}\n                    listComponent={SuggestionList}\n                    providers={this.suggestionProviders}\n                    channelId={this.props.channelId}\n                    onUserInput={this.handleUserInput}\n                    onKeyPress={this.postMsgKeyPress}\n                    onKeyDown={this.handleKeyDown}\n                                id='message_textbox'\n                                ref='textbox'\n                />\n\n                                    <FileUpload\n                                    ref='fileUpload'\n                                    getFileCount={this.getFileCount}\n                                    onClick={this.handleUploadClick}\n                                    onUploadStart={this.handleUploadStart}\n                                    onFileUpload={this.handleFileUploadComplete}\n                                    onUploadError={this.handleUploadError}\n                                    postType='post'\n                                    channelId=''\n                            />\n\n\n            </div>\n\n\n\n\n\n                <div className='help__text'>\n                    {helpText}\n                    {previewLink}\n                    <a\n                        target='_blank'\n                        href='/help/getting-started/messaging-basics.html'\n                        className='textbox-help-link'\n                    >\n                        <FormattedMessage\n                            id='textbox.help'\n                            defaultMessage='Help'\n                        />\n                    </a>\n                </div>\n\n\n\n                        {tutorialTip}\n\n\n                    <div className={postFooterClassName}>\n                        <MsgTyping\n                            channelId={this.state.channelId}\n                            parentId={''}\n                        />\n                        {preview}\n                        {postError}\n                        {serverError}\n                    </div>\n    </div>\n\n\n    );\n  },\n\nfocus() {\n        this.refs.message.getTextbox().focus();\n    },\nfocusTextbox() {\n        if (!Utils.isMobile()) {\n            this.refs.textbox.focus();\n        }\n    },\n\n\nshowPreview(e) {\n        e.preventDefault();\n        e.target.blur();\n        this.setState({preview: !this.state.preview});\n    },\n\n  _onChange: function(event, value) {\n    this.setState({text: event.target.value});\n  },\n\n  _onKeyDown: function(event) {\n    if (event.keyCode === ENTER_KEY_CODE) {\n      event.preventDefault();\n      var text = this.state.text.trim();\n      if (text) {\n        //ChatMessageActionCreators.createMessage(text, this.props.chat,chat_type=ChatTypeStore.getCurrent());\n         this.props.actions.createMessage(text,this.props.currentChat);\n\n      }\n      this.setState({text: ''});\n    }\n  }\n\n});\n\nexport default injectIntl(MessageComposer);\n\n\n\n/** WEBPACK FOOTER **\n ** ./web/static/js/app/components/chat/MessageComposer.react.js\n **/","// Copyright (c) 2016 Sparkplug, Inc. All Rights Reserved.\n\nimport $ from 'jquery';\nimport ReactDOM from 'react-dom';\n\nimport ActionTypes from '../../../constants';\nimport ChatConstants from '../../../constants'\n\nimport * as Utils from '../../../utils/general';\n\nimport TextareaAutosize from 'react-textarea-autosize';\n\nconst KeyCodes = ChatConstants.KeyCodes;\n\nimport React from 'react';\n\nexport default class SuggestionBox extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleDocumentClick = this.handleDocumentClick.bind(this);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleCompleteWord = this.handleCompleteWord.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.handlePretextChanged = this.handlePretextChanged.bind(this);\n\n        this.suggestionId = Utils.generateId();\n    }\n\n    componentDidMount() {\n\n        store.dispatch({\n                        type: ActionTypes.REGISTER_SUGGESTION_BOX,\n                        id:this.suggestionId,\n\n                        });\n\n\n        $(document).on('click', this.handleDocumentClick);\n\n\n        this.handleCompleteWord();\n\n\n\n       // SuggestionStore.addCompleteWordListener(this.suggestionId, this.handleCompleteWord);\n        //SuggestionStore.addPretextChangedListener(this.suggestionId, this.handlePretextChanged);\n    }\n\n    componentWillUnmount() {\n        //SuggestionStore.removeCompleteWordListener(this.suggestionId, this.handleCompleteWord);\n        //SuggestionStore.removePretextChangedListener(this.suggestionId, this.handlePretextChanged);\n\n        //SuggestionStore.unregisterSuggestionBox(this.suggestionId);\n        $(document).off('click', this.handleDocumentClick);\n    }\n\n    getTextbox() {\n        // this is to support old code that looks at the input/textarea DOM nodes\n        let textbox = this.refs.textbox;\n\n        if (!(textbox instanceof HTMLElement)) {\n            textbox = ReactDOM.findDOMNode(textbox);\n        }\n\n        return textbox;\n    }\n\n    handleDocumentClick(e) {\n        const container = $(ReactDOM.findDOMNode(this));\n        if (!(container.is(e.target) || container.has(e.target).length > 0)) {\n            // we can't just use blur for this because it fires and hides the children before\n            // their click handlers can be called\n\n             store.dispatch({\n                        type: ActionTypes.SUGGESTION_CLEAR_SUGGESTIONS,\n                        id:this.suggestionId,\n\n                        });\n        }\n    }\n\n    handleChange(e) {\n        const textbox = ReactDOM.findDOMNode(this.refs.textbox);\n        const caret = Utils.getCaretPosition(textbox);\n        const pretext = textbox.value.substring(0, caret);\n\n        //GlobalActions.emitSuggestionPretextChanged(this.suggestionId, pretext);\n        store.dispatch({\n                        type: ActionTypes.SUGGESTION_PRETEXT_CHANGED,\n                        id:this.suggestionId,\n                        pretext:pretext\n\n                        });\n\n        if (this.props.onUserInput) {\n            this.props.onUserInput(textbox.value);\n        }\n\n        if (this.props.onChange) {\n            this.props.onChange(e);\n        }\n    }\n\n    handleCompleteWord() {\n\n        const term = this.props.currentSuggestion.term;\n        const textbox = ReactDOM.findDOMNode(this.refs.textbox);\n        const caret = Utils.getCaretPosition(textbox);\n\n        const text = this.props.value;\n        const prefix = \"\";//text.substring(0, caret - SuggestionStore.getMatchedPretext(this.suggestionId).length);\n        const suffix = text.substring(caret);\n\n        if (this.props.onUserInput) {\n            this.props.onUserInput(prefix + term + ' ' + suffix);\n        }\n\n        // set the caret position after the next rendering\n        window.requestAnimationFrame(() => {\n            Utils.setCaretPosition(textbox, prefix.length + term.length + 1);\n        });\n    }\n\n    handleKeyDown(e) {\n        if (SuggestionStore.hasSuggestions(this.suggestionId)) {\n            if (e.which === KeyCodes.UP) {\n                 store.dispatch({\n                        type: ActionTypes.SUGGESTION_SELECT_PREVIOUS,\n                        id:this.suggestionId,\n\n                        });\n                e.preventDefault();\n            } else if (e.which === KeyCodes.DOWN) {\n                store.dispatch({\n                        type: ActionTypes.SUGGESTION_SELECT_NEXT,\n                        id:this.suggestionId,\n\n                        });\n                e.preventDefault();\n            } else if (e.which === KeyCodes.ENTER || e.which === KeyCodes.TAB) {\n\n                store.dispatch({\n                        type: ActionTypes.SUGGESTION_COMPLETE_WORD,\n                        id:this.suggestionId,\n\n                        });\n                e.preventDefault();\n            } else if (this.props.onKeyDown) {\n                this.props.onKeyDown(e);\n            }\n        } else if (this.props.onKeyDown) {\n            this.props.onKeyDown(e);\n        }\n    }\n\n    handlePretextChanged(pretext) {\n        for (const provider of this.props.providers) {\n            provider.handlePretextChanged(this.suggestionId, pretext);\n        }\n    }\n\n    render() {\n        const newProps = Object.assign({}, this.props, {\n            onChange: this.handleChange,\n            onKeyDown: this.handleKeyDown\n        });\n\n        let textbox = null;\n        if (this.props.type === 'input') {\n            textbox = (\n                <input\n                    ref='textbox'\n                    type='text'\n                    {...newProps}\n                />\n            );\n        } else if (this.props.type === 'search') {\n            textbox = (\n                <input\n                    ref='textbox'\n                    type='search'\n                    {...newProps}\n                />\n            );\n        } else if (this.props.type === 'textarea') {\n            textbox = (\n                <TextareaAutosize\n                    id={this.suggestionId}\n                    ref='textbox'\n                    {...newProps}\n                />\n            );\n        }\n\n        const SuggestionListComponent = this.props.listComponent;\n\n        return (\n            <div>\n                {textbox}\n                <SuggestionListComponent suggestionId={this.suggestionId}/>\n            </div>\n        );\n    }\n}\n\nSuggestionBox.defaultProps = {\n    type: 'input'\n};\n\nSuggestionBox.propTypes = {\n    listComponent: React.PropTypes.func.isRequired,\n    type: React.PropTypes.oneOf(['input', 'textarea', 'search']).isRequired,\n    value: React.PropTypes.string.isRequired,\n    onUserInput: React.PropTypes.func,\n    providers: React.PropTypes.arrayOf(React.PropTypes.object),\n\n    // explicitly name any input event handlers we override and need to manually call\n    onChange: React.PropTypes.func,\n    onKeyDown: React.PropTypes.func,\n    onHeightChange: React.PropTypes.func\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./web/static/js/app/components/chat/suggestion/suggestion_box.jsx\n **/","import {createSelector} from 'reselect';\nimport _ from 'lodash';\n\nconst messageListByQuerySelector = state => state.messageListByQuery;\nconst threadsByIDSelector = state => state.threads;\nconst roomsByIDSelector = state => state.rooms;\nconst messagesByIDSelector = state => state.messages;\n\nexport const isLoadingSelector = state => state.isLoading;\nexport const labelsSelector = state => state.labels;\nexport const threadsSelector = state => state.threads;\nexport const searchQuerySelector = state => state.app.searchQuery;\nexport const selectedMessageIDSelector = state => state.currentChat.messageID;\nexport const selectedIDSelector = state => state.currentChat.id;\n\nexport const selectedRoomIDSelector = state => state.currentChat.roomID;\n\nexport const selectedSuggestionBox  = state => state.currentSuggestion.id;\nexport const suggestionsSelector = state => state.suggestionsSelector;\n\n\n\nconst jidSelector = state => state.xmpp.jid;\n\n\n\nexport const allThreadsSelector = createSelector([\n  searchQuerySelector,\n  messageListByQuerySelector,\n  threadsByIDSelector,\n], (\n  searchQuery,\n  messageListByQuery,\n  threadsByID,\n) => {\n  const threadList = messageListByQuery[searchQuery];\n  return threadList ?\n    threadList.threadIDs.map(threadID => threadsByID[threadID]) :\n    [];\n});\n\n\nexport const currentThreadMessagesSelector = createSelector([\n    messagesByIDSelector,\n  selectedIDSelector,\n        jidSelector\n], (\n  messages,\n  id,\n      jid\n) => {\n     var from_messages=_.filter(messages,{from:id,to: jid});\n      var   my_messages=_.filter(messages,{from:jid,to:id});\n    const toret= _.uniqBy(from_messages.concat(my_messages), function(elem) { return [elem.from,elem.to,elem.created,elem.text].join(); });\n    return _.orderBy(toret,[\"created\"],['desc']);\n});\n\n\nexport const selectedThreadMessagesSelector = createSelector([\n  threadsByIDSelector,\n  selectedIDSelector,\n  messagesByIDSelector,\n], (\n  threadsByID,\n  selectedThreadID,\n  messagesByID,\n) => {\n  const selectedThread = threadsByID[selectedThreadID];\n  return selectedThread &&\n    selectedThread.messageIDs.map(messageID => messagesByID[messageID]);\n});\n\n\n\nexport const selectedSuggestionSelector = createSelector([\n  suggestionsSelector,\n selectedSuggestionBox\n], (\n  suggestions,\n  message_box_id\n) => {\n  const suggestion = suggestions[message_box_id];\n  return suggestion;\n});\n\n\nexport const chronoThreadsSelector=createSelector([threadsSelector],(threads\n    ) => {\n        var orderedThreads = [];\n    for (var id in threads) {\n      var thread = threads[id];\n      orderedThreads.push(thread);\n    }\n    orderedThreads.sort(function(a, b) {\n        if (!a.lastMessage === null) {\n\n            if (a.lastMessage._created < b.lastMessage._created) {\n                return -1;\n            } else if (a.lastMessage._created > b.lastMessage._created) {\n                return 1;\n            }\n        }else{\n            return -1;\n        }\n      return 0;\n\n    });\n    return orderedThreads;\n    }\n\n);\n\n\nexport const lastMessageInEachThreadSelector = createSelector([\n  messagesByIDSelector,\n  threadsSelector\n], (\n  messagesByID,\n  threads\n) => {\n  return threads && _.toArray(threads).map(\n    thread => messagesByID[_.last(thread.messageIDs)]\n  );\n});\n\nexport const hasMoreThreadsSelector = createSelector([\n  searchQuerySelector,\n  messageListByQuerySelector,\n], (\n  searchQuery,\n  messageListByQuery,\n) => {\n  const threadList = messageListByQuery[searchQuery];\n  return !threadList || !!threadList.nextPageToken;\n});\n\nexport const loadedThreadCountSelector = createSelector([\n  searchQuerySelector,\n  messageListByQuerySelector,\n], (\n  searchQuery,\n  messageListByQuery,\n) => {\n  const threadList = messageListByQuery[searchQuery];\n  return threadList ? threadList.threadIDs.length : 0;\n});\n\nexport const nextMessageSelector = createSelector([\n  lastMessageInEachThreadSelector,\n  selectedMessageIDSelector,\n], (\n  messages,\n  selectedMessageID\n) => {\n  if (!messages) {\n    return null;\n  }\n\n  const selectedMessageIndex = selectedMessageID &&\n    messages.findIndex(\n      msg => msg.id === selectedMessageID\n    );\n\n  if (!selectedMessageID) {\n    return messages[0];\n  } else if (selectedMessageIndex < 0 || selectedMessageIndex === messages.length) {\n    return null;\n  } else {\n    return messages[selectedMessageIndex + 1];\n  }\n});\n\nexport const prevMessageSelector = createSelector([\n  lastMessageInEachThreadSelector,\n  selectedMessageIDSelector,\n], (\n  messages,\n  selectedMessageID\n) => {\n  if (!messages) {\n    return null;\n  }\n\n  const selectedMessageIndex = selectedMessageID &&\n    messages.findIndex(\n      msg => msg.id === selectedMessageID\n    );\n\n  if (!selectedMessageID) {\n    return messages[0];\n  } else if (selectedMessageIndex < 0 || selectedMessageIndex === 0) {\n    return null;\n  } else {\n    return messages[selectedMessageIndex - 1];\n  }\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./web/static/js/app/selectors/index.js\n **/","import { combineReducers }  from 'redux';\nimport { routerReducer }    from 'react-router-redux';\nimport session              from './sessionReducer';\nimport registration         from './registrationReducer';\nimport boards               from './boardReducer';\nimport currentBoard         from './currentBoardReducer';\nimport currentCard          from './currentCardReducer';\nimport header               from './headerReducer';\nimport xmpp                from './xmppReducer'\nimport app                from './appReducer'\nimport calls                from './callReducer'\nimport currentChat                from './currentChatReducer'\nimport contacts                from './contactReducer'\nimport loading                from './loadingReducer'\nimport messages                from './messageReducer'\nimport resources                from './resourceReducer'\nimport rooms                from './roomReducer'\nimport threads                from './threadReducer'\nimport task                from './taskReducer'\nimport unreadThread                from './unreadThreadReducer'\nimport unreadRoom                from './unreadRoomReducer'\nimport user                from './userReducer'\nimport tasks from './taskreducer'\nimport suggestions from './suggestionsReducer';\n\nimport MessageListReducer from './MessageListReducer';\n\nimport {messageReducer}       from './messageReducer';\n\nimport {currentSuggestion} from './suggestionsReducer';\n\nexport default combineReducers({\n  routing: routerReducer,\n  session: session,\n  registration: registration,\n  boards: boards,\n  currentBoard: currentBoard,\n  currentCard: currentCard,\n    currentChat:currentChat,\n  header: header,\n    tasks:tasks,\n    xmpp: xmpp,\n    messages:messages,\n    loading: loading,\n    user: user,\n    unreadRoom: unreadRoom,\n    unreadThread:unreadThread,\n    threads: threads,\n    rooms: rooms,\n    contacts: contacts,\n    calls:calls,\n    resources: resources,\n    app:app,\n     messageListByQuery: MessageListReducer,\n      suggestions: suggestions,\n    currentMessage: messageReducer,\n    currentSuggestion:currentSuggestion\n\n\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./web/static/js/app/reducers/index.js\n **/","import ActionTypes  from '../constants/chat_constants';\n\n\n  function markInactive   () {\n        if (this.focused) {\n            return this.markActive();\n        }\n\n        _active = false;\n        _idleSince = new Date(Date.now());\n\n    }\n\nfunction registerSuggestionBox(id,state) {\n        state[id]={\n            pretext: '',\n            matchedPretext: '',\n            terms: [],\n            items: [],\n            components: [],\n            selection: ''\n        };\n    return state;\n    }\n\n   function  unregisterSuggestionBox(id,state) {\n        delete state[id];\n       return state;\n    }\n\n    function clearSuggestions(id,state) {\n        const suggestion = state[id];\n\n        suggestion.matchedPretext = '';\n        suggestion.terms = [];\n        suggestion.items = [];\n        suggestion.components = [];\n        state[id] =suggestion;\n       return state;\n    }\n\n    function clearSelection(id,state) {\n        const suggestion = state[id];\n\n        suggestion.selection = '';\n        state[id]=suggestion;\n        return state;\n    }\n\n    function hasSuggestions(id,state) {\n        return state[id].terms.length > 0;\n    }\n\n    function setPretext(id, pretext,state) {\n        const suggestion = state[id];\n\n        suggestion.pretext = pretext;\n        state[id] = suggestion;\n        return state;\n    }\n\n    function setMatchedPretext(id, matchedPretext,state) {\n        const suggestion = state[id];\n\n        suggestion.matchedPretext = matchedPretext;\n        state[id] = suggestion;\n        return state;\n    }\n\n    function addSuggestion(id, term, item, component,state) {\n        const suggestion = state[id];\n\n        suggestion.terms.push(term);\n        suggestion.items.push(item);\n        suggestion.components.push(component);\n         state[id] = suggestion;\n        return state;\n    }\n\n   function  addSuggestions(id, terms, items, component,state) {\n        const suggestion = state[id];\n\n        suggestion.terms.push(...terms);\n        suggestion.items.push(...items);\n\n        for (let i = 0; i < terms.length; i++) {\n            suggestion.components.push(component);\n        }\n       state[id] = suggestion;\n       return state;\n    }\n\n    // make sure that if suggestions exist, then one of them is selected. return true if the selection changes.\n    function ensureSelectionExists(id,state) {\n        const suggestion = state[id];\n\n        if (suggestion.terms.length > 0) {\n            // if the current selection is no longer in the map, select the first term in the list\n            if (!suggestion.selection || suggestion.terms.indexOf(suggestion.selection) === -1) {\n                suggestion.selection = suggestion.terms[0];\n\n                return true;\n            }\n        } else if (suggestion.selection) {\n            suggestion.selection = '';\n\n\n        }\n\n        state[id] = suggestion;\n       return state;\n    }\n\n    function getPretext(id,state) {\n        return state[id].pretext;\n    }\n\n    function getMatchedPretext(id,state) {\n        return state[id].matchedPretext;\n    }\n\n   function  getItems(id,state) {\n        return state[id].items;\n    }\n\n    function getTerms(id,state) {\n        return state[id].terms;\n    }\n\n   function  getComponents(id,state) {\n        return state[id].components;\n    }\n\n   function  getSelection(id,state) {\n        return state[id].selection;\n    }\n\n    function selectNext(id,state) {\n        return setSelectionByDelta(id, 1,state);\n    }\n\n    function selectPrevious(id,state) {\n        return setSelectionByDelta(id, -1,state);\n    }\n\n    function setSelectionByDelta(id, delta,state) {\n        const suggestion = state[id];\n\n        let selectionIndex = suggestion.terms.indexOf(suggestion.selection);\n\n        if (selectionIndex === -1) {\n            // this should never happen since selection should always be in terms\n            throw new Error('selection is not in terms');\n        }\n\n        selectionIndex += delta;\n\n        if (selectionIndex < 0) {\n            selectionIndex = 0;\n        } else if (selectionIndex > suggestion.terms.length - 1) {\n            selectionIndex = suggestion.terms.length - 1;\n        }\n\n        suggestion.selection = suggestion.terms[selectionIndex];\n\n    state[id] = suggestion;\n    return state;\n    }\n\nexport default function reducer(state = {}, action = {}) {\n     const  { id, ...other} = action;\n     switch (action.type) {\n\n\n         case ActionTypes.SUGGESTION_PRETEXT_CHANGED:\n             var toret=state;\n             toret=clearSuggestions(id,toret);\n\n            toret=setPretext(id, other.pretext,toret);\n             store.dispatch({\n                        type: ActionType.PRETEXT_CHANGED,\n                        id:id,\n                        pretext:other.pretext\n\n                         });\n\n\n            toret=ensureSelectionExists(id,toret);\n             store.dispatch({\n                        type: ActionType.SUGGESTIONS_CHANGED,\n                        id:id,\n\n                        });\n\n            return {...toret};\n\n        case  ActionTypes.SUGGESTION_RECEIVED_SUGGESTIONS:\n            var toret=state;\n              if (getMatchedPretext(id,state) === '') {\n                toret=setMatchedPretext(id, other.matchedPretext,toret);\n\n                // ensure the matched pretext hasn't changed so that we don't receive suggestions for outdated pretext\n                toret=addSuggestions(id, other.terms, other.items, other.component,toret);\n\n                toret=ensureSelectionExists(id,toret);\n                store.dispatch({\n                        type: ActionType.SUGGESTIONS_CHANGED,\n                        id:id,\n\n                        });\n            }\n\n\n\n            return { ...toret };\n        case ActionTypes.SUGGESTION_CLEAR_SUGGESTIONS:\n             var toret = state;\n             toret = clearSuggestions(id,toret);\n             toret = clearSelection(id,toret);\n             store.dispatch({\n                        type: ActionType.SUGGESTIONS_CHANGED,\n                        id:id,\n\n                        });\n\n            return {...toret };\n         case ActionTypes.SUGGESTION_SELECT_PREVIOUS:\n             var toret = state;\n             toret = selectNext(id,toret);\n              store.dispatch({\n                        type: ActionType.SUGGESTIONS_CHANGED,\n                        id:id,\n\n                        });\n\n            return { ...toret };\n\n        case ActionTypes.SUGGESTION_SELECT_NEXT:\n          var toret=state;\n          toret = selectPrevious(id,toret);\n             store.dispatch({\n                        type: ActionType.SUGGESTIONS_CHANGED,\n                        id:id,\n\n                        });\n            return {...toret};\n        case ActionTypes.SUGGESTION_COMPLETE_WORD:\n              var toret = state;\n             store.dispatch({\n                        type: ActionType.COMPLETE_WORD,\n                        id:id,\n                        term: other.term || getSelection(id,state)|| getMatchedPretext(id,state)\n\n                        });\n\n\n            toret = setPretext(id, '',toret);\n            toret = clearSuggestions(id,toret);\n            toret = clearSelection(id,toret);\n            store.dispatch({\n                        type: ActionType.SUGGESTIONS_CHANGED,\n                        id:id,\n\n                        });\n          return {...toret };\n\n        case ActionTypes.REGISTER_SUGGESTION_BOX:\n            var toret = state;\n            toret = registerSuggestionBox(id,toret);\n            return {...toret };\n        case ActionTypes.ADD_COMPLETE_WORD:\n            var toret = state;\n            return {...toret };\n        case ActionTypes.SUGGESTION_COMPLETE_WORD:\n            var toret = state;\n            return {...toret };\n        case ActionTypes.SUGGESTION_COMPLETE_WORD:\n            var toret = state;\n            return {...toret };\n\n\n\n\n    default:\n      return state;\n  }\n}\n\n\n\nconst currentSuggestion = function reducer(state = {}, action = {}) {\n     const  { id, ...other} = action;\n     switch (action.type) {\n\n          case ActionTypes.REGISTER_SUGGESTION_BOX:\n                 return {id: id };\n         case ActionTypes.SUGGESTION_COMPLETE_WORD:\n             return {id:id,term: other.term || getSelection(id,state)|| getMatchedPretext(id,state)};\n\n    default:\n      return state;\n  }\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./web/static/js/app/reducers/suggestionsReducer.js\n **/"],"sourceRoot":""}