{"version":3,"sources":["webpack:///./web/static/js/app/actions/chatActions.js?7f7a"],"names":[],"mappings":"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","file":"0.7cbc04e55f6e316b340d.hot-update.js","sourcesContent":["import ActionTypes  from '../constants';\nimport { push }           from 'react-router-redux';\n\nimport {getSelection,getMatchedPretext} from '../reducers/suggestionsReducer';\nexport function clickChannel(channelID) {\n\n    return dispatch => {\n        dispatch({\n            type: ActionTypes.CLICK_CHANNEL,\n            channelID: channelID\n        });\n\n    dispatch(push(`/chat/channels/${channelID}`));\n    }}\n\n\n\n\n\nfunction promise(callback){\n    return dispatch => {\n        console.log(dispatch);\n        dispatch(callback);\n         return Promise.resolve();\n    }\n\n}\n\n\nexport function clickThread(threadID) {\n    return dispatch => {\n    dispatch({\n      type: ActionTypes.CLICK_THREAD,\n      threadID: threadID\n    });\n\n    dispatch(push(`/chat/threads/${threadID}`));\n\n\n  }}\n\n\nexport function createMessage(text, chat) {\n    return (dispatch, getState) =>\n    {\n        dispatch({\n            type: ActionTypes.CREATE_MESSAGE,\n            message: message,\n            chat: chat,\n\n        });\n    }\n  }\n\nexport function    receiveRawMessage(msg) {\n    return (dispatch, getState) =>\n    {\n        dispatch({\n            type: ActionTypes.RECEIVE_RAW_MESSAGE,\n            msg: msg\n\n        });\n    }\n    }\n\nexport function receiveAll(rawMessages) {\n    return (dispatch, getState) =>\n    {\n        dispatch({\n            type: ActionTypes.RECEIVE_RAW_MESSAGES,\n            rawMessages: rawMessages\n        });\n    }\n  }\n\n\n\n  export function receiveCreatedMessage(createdMessage) {\n    return (dispatch, getState) =>\n    {\n        dispatch({\n            type: ActionTypes.RECEIVE_RAW_CREATED_MESSAGE,\n            rawMessage: createdMessage\n        });\n    }\n  }\n\n\n\n\nexport function selectNextSuggestion(suggestionId) {\n    return (dispatch, getState) =>\n    {\n        promise(dispatch({\n            type: ActionTypes.SUGGESTION_SELECT_NEXT,\n            id: suggestionId\n        })).then(() => dispatch({\n                        type: ActionTypes.SUGGESTIONS_CHANGED,\n                        id:suggestionId\n\n                        })   );\n\n}}\n\nexport function selectPreviousSuggestion(suggestionId) {\n    return (dispatch, getState) =>\n    {\n        dispatch({\n            type: ActionTypes.SUGGESTION_SELECT_PREVIOUS,\n            id: suggestionId\n        }).then(() => dispatch({\n                        type: ActionTypes.SUGGESTIONS_CHANGED,\n                        id:suggestionId,\n\n                        })  );\n    }\n}\n\n\n\nexport function suggestionChanged(suggestionId){\n     return (dispatch, getState) =>\n    {\n\n\n        return dispatch({\n            type: ActionTypes.SUGGESTIONS_CHANGED,\n            id: suggestionId,\n\n        });\n\n\n\n    }\n\n}\n\nfunction emitCompleteWordSuggestion(suggestionId, term = ''){\n\n    return (dispatch, getState) =>\n    {\n        var suggestions =getState().suggestions;\n        var suggestion =suggestions[suggestionId];\n        return dispatch({\n            type: Constants.ActionTypes.SUGGESTION_COMPLETE_WORD,\n            id: suggestionId,\n            term: term\n        });\n\n}}\n\nfunction completeWord(suggestionId, term = ''){\n    return (dispatch, getState) =>\n    {\n    return dispatch({\n                        type: ActionTypes.COMPLETE_WORD,\n                        id:id,\n                        term: term || getSelection(id,suggestions)|| getMatchedPretext(id,suggestions)\n\n                        });\n}}\n\nexport function completeWordSuggestion(suggestionId, term = '') {\n    return (dispatch, getState) =>\n    {\n        var suggestions =getState().suggestions;\n        var suggestion =suggestions[suggestionId];\n        promise(dispatch({\n            type: Constants.ActionTypes.SUGGESTION_COMPLETE_WORD,\n            id: suggestionId,\n            term: term\n        })).then(()=>  promise(dispatch({\n                        type: ActionTypes.COMPLETE_WORD,\n                        id:id,\n                        term: term || getSelection(id,suggestions)|| getMatchedPretext(id,suggestions)\n\n                        }))).then(() => dispatch({\n                        type: ActionTypes.SUGGESTIONS_CHANGED,\n                        id:suggestionId\n\n                        })   );\n    }\n}\n\n\n\n\nexport function registerSuggestions(suggestionId){\n     return {type: ActionTypes.REGISTER_SUGGESTION_BOX,id: suggestionId}\n\n\n\n    }\n\n\nexport function unregisterSuggestions(suggestionId){\n    return (dispatch, getState) =>\n    {\n        dispatch({type: ActionTypes.UNREGISTER_SUGGESTION_BOX,id: suggestionId});\n\n\n\n    }\n}\n\nexport function clearSuggestions(suggestionId){\n    return (dispatch, getState) =>\n    {\n        promise(dispatch({type: ActionTypes.SUGGESTION_CLEAR_SUGGESTIONS,id: suggestionId})).then(() => dispatch({\n                        type: ActionTypes.SUGGESTIONS_CHANGED,\n                        id:suggestionId\n\n                        })   );\n\n\n\n    }\n}\n\n\nexport function suggestionPretextChanged(suggestionId,pretext){\n    return (dispatch, getState) =>\n    {\n        promise(dispatch({type: ActionTypes.SUGGESTION_PRETEXT_CHANGED,\n                  id: suggestionId,\n                  pretext:pretext})).then(() => promise(dispatch({\n                        type: ActionTypes.PRETEXT_CHANGED,\n                        id:suggestionId,\n                        pretext:pretext\n\n                         }))).then(() => dispatch({\n                        type: ActionTypes.SUGGESTIONS_CHANGED,\n                        id:suggestionId\n\n                        })   );\n\n\n\n    }\n}\n\n\nexport function handlePretextChanged(suggestionId,pretext)\n{\n\n    return (dispatch, getState) =>\n        {\n            if (pretext.startsWith('/')) {\n\n          httpGet(`/api/v1/commands/${CommandSuggestion}/`)\n          .then((data) => {\n\n                      var matches = [];\n                data.forEach((cmd) => {\n                    if (('/' + cmd.trigger).indexOf(command) === 0) {\n                        let s = '/' + cmd.trigger;\n                        let hint = '';\n                        if (cmd.auto_complete_hint && cmd.auto_complete_hint.length !== 0) {\n                            hint = cmd.auto_complete_hint;\n                        }\n                        matches.push({\n                            suggestion: s,\n                            hint,\n                            description: cmd.auto_complete_desc\n                        });\n                    }\n                });\n\n                matches = matches.sort((a, b) => a.suggestion.localeCompare(b.suggestion));\n\n                // pull out the suggested commands from the returned data\n                const terms = matches.map((suggestion) => suggestion.suggestion);\n\n                if (terms.length > 0) {\n                    promise(dispatch({\n                        type: ActionTypes.SUGGESTION_RECEIVED_SUGGESTIONS,\n                        id: suggestionId,\n                        matchedPretext: command,\n                        terms:terms,\n                        items: matches,\n                        component:component\n                    })).then( () => {\n\n                        dispatch({\n                            type: ActionTypes.SUGGESTIONS_CHANGED,\n                            id: suggestionId\n\n                        })\n                }\n                    );\n                }\n\n\n          });\n        }\n            }\n\n\n\n\n\n\n}\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./web/static/js/app/actions/chatActions.js\n **/"],"sourceRoot":""}