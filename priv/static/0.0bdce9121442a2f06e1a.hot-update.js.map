{"version":3,"sources":["webpack:///./web/static/js/app/reducers/roomReducer.js?beb6"],"names":[],"mappings":"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","file":"0.0bdce9121442a2f06e1a.hot-update.js","sourcesContent":["import ActionTypes  from '../constants';\nimport {fetchHistory}  from '../actions/xmppActions';\n\nconst initialState = {\n  fetching: true\n};\n\nvar local={\n    initialized: !1,\n    user_state: \"active\",\n    active_type: \"\",\n    profile_jids: [],\n    sent_msg_ids: [],\n    participants: [],\n    received_mids: [],\n    history_fetch_id: 0,\n    chat_states: [\"active\", \"inactive\", \"composing\", \"gone\"]\n};\n\nvar defaults = {\n    room: {\n        admins: [],\n        participants: {\n            members: [],\n            guests: []\n        },\n        files: [],\n        links: [],\n        is_archived: \"0\",\n        history_fetch_ids: [],\n        show_join_messages: !1,\n        guest_mention_regex: null,\n        presence: {\n            show: \"\",\n            status: \"\",\n            seconds: \"\",\n            idleTime: \"\"\n        }\n    },\n    roster: {\n        presence: {\n            show: \"unknown\",\n            status: \"\",\n            seconds: \"\",\n            idleTime: \"\"\n        }\n    }\n};\n\n\n\n\n\nfunction addMessage(id,message, notify) {\n        muc=_mucs[id];\n        message.owner = app.me;\n\n        var mine = message.from.resource === muc.nick;\n\n        if (mine) {\n            message._mucMine = true;\n        }\n        if (!mine && message.body.toLowerCase().indexOf(muc.nick.toLowerCase()) >= 0) {\n            message.mentions = this.nick;\n        }\n\n        if (notify && (!this.activeContact || (this.activeContact && !app.state.focused)) && !mine) {\n            muc.unreadCount++;\n            if (message.mentions) {\n                app.notifications.create(muc.displayName, {\n                    body: message.body,\n                    icon: muc.avatar,\n                    tag: muc.id\n                    //onclick: _.bind(app.navigate, app, '/groupchat/' + this.jid)\n                });\n            }\n        }\n\n        message.acked = true;\n        message.save();\n\n        if (mine) {\n            muc.lastSentMessage = message;\n        }\n\n        //this.messages.add(message);\n\n        var newInteraction = new Date(message.created);\n        if (!muc.lastInteraction || this.lastInteraction < newInteraction) {\n            muc.lastInteraction = newInteraction;\n        }\n    }\n\n\n\n\n\n\n function joinAndBookmark(rooms) {\n        var upRooms =[];\n        const {client,user} = store.getState().xmpp;\n\n        if(user){\n\n            var nick=user.first_name;\n        }else{\n\n            var nick=\"\"\n\n        }\n\n     _.toArray(rooms).forEach(function (room) {\n            upRooms.push({\n                name: room.name,\n                jid: room.jid,\n                nick: room.name,\n                autoJoin: true\n            });\n             client.joinRoom(room.jid, nick, {\n                history: {\n                    maxstanzas: 200\n                    //since: this.lastInteraction\n                }\n        });\n          store.dispatch(fetchHistory(room.jid));\n        });\n        client.setBookmarks({conferences: upRooms});\n\n\n    }\n\n\n\nexport default function reducer(rooms = {}, action = {}) {\n  switch (action.type) {\n    case ActionTypes.CLIENT_SESSION_STARTED:\n\n            return {...rooms};\n\n    case ActionTypes.LOAD_ROOMS:\n\n        var allRooms = action.rooms.reduce(\n        (newRooms, room) => {\n          newRooms[room.jid] = room\n          return newRooms;\n        },\n        rooms\n      );\n        joinAndBookmark(allRooms);\n        return allRooms;\n\n\n    case ActionTypes.CLICK_CHANNEL:\n        var _currentID = action.channelID;\n\n        return { ...rooms};\n\n    case ActionTypes.CHANNEL_RECEIVE_RAW_MESSAGES:\n        //MucStore.init(action.rawMessages);\n\n        return { ...rooms};\n    case ActionTypes.RECEIVE_RAW_MUCS:\n        _addChannels(action.rawMucs);\n\n        return { ...rooms};\n\n    default:\n      return rooms;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./web/static/js/app/reducers/roomReducer.js\n **/"],"sourceRoot":""}