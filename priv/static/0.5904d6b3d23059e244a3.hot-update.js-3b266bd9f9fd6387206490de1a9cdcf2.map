{"version":3,"sources":["webpack:///./web/static/js/app/app.js?2db7","webpack:///./web/static/js/app/routes/index.js?51f4"],"names":[],"mappings":"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","file":"0.5904d6b3d23059e244a3.hot-update.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  Router,\n  useRouterHistory,\n    browserHistory\n} from 'react-router';\n//import AppRoutes from './AppRoutes';\nimport configRoutes from './routes'\nimport injectTapEventPlugin from 'react-tap-event-plugin';\nimport {createHashHistory} from 'history';\nimport configureStore           from './store';\n\n\n\n\n\n\nvar localStorage = require('localStorage');\n\nvar _ = require('lodash');\nvar async = require('async');\nvar StanzaIO = require('stanza.io');\n\nvar Storage = require('./storage');\nvar xmppEventHandlers = require('./helpers/xmppEventHandlers');\nvar pushNotifications = require('./helpers/pushNotifications');\nvar Notify = require('notify.js');\nvar Desktop = require('./helpers/desktop');\nvar AppCache = require('./helpers/cache');\nvar AppState = require('./stores/stateStore');\nvar userStore = require('./stores/userStore');\nvar contactUtils = require('./utils/contactUtils');\nvar crypto = require('crypto');\nvar ChatWebAPIUtils = require('./utils/ChatWebAPIUtils');\n\nvar MessageSchema = require(\"./stores/schema/message\");\nvar jQuery=require('jquery');\nvar request = require('superagent');\nrequire('superagent-as-promised')(request);\nvar Backbone = require('backbone');\nimport { syncHistoryWithStore } from 'react-router-redux';\n//var injectTapEventPlugin = require(\"react-tap-event-plugin\");\n\nvar moment = require(\"moment\");\nimport { Provider }                 from 'react-redux';\n\nconst store = configureStore(browserHistory);\nconst history = syncHistoryWithStore(browserHistory, store);\n\n\n\n\n//ChatExampleData.init(); // load example data into localstorage\n\n//ChatWebAPIUtils.getAllMessages();\n\n//Helpers for debugging\nwindow.React = React;\nwindow._=_;\nwindow.Perf = require('react-addons-perf');\nwindow.moment=moment;\n\n//Needed for onTouchTap\n//Can go away when react 1.0 release\n//Check this repo:\n//https://github.com/zilverline/react-tap-event-plugin\ninjectTapEventPlugin();\n\n\n\n\nvar exports = {\n    launch: function () {\n        var self = window.app = this;\n        var config = {\n            jid: \"mossplix@localhost\",\n            wsURL: \"ws://127.0.0.1:5280/websocket\",\n            transport: \"websocket\",\n            nickname: \"mmoses\",\n            credentials: {\n                password: \"mosespass\"\n            }};\n        localStorage.config = JSON.stringify(config);\n\n        //localStorage.mucs  = JSON.stringify(muc_list);\n        app.jid=app.me=config.jid;\n        app.config=config;\n        window._=_;\n        window.request = request;\n\n\n\n        config.useStreamManagement = true;\n\n        _.extend(this, Backbone.Events);\n\n        var profile = {};\n        async.series([\n            function (cb) {\n                app.notifications = new Notify();\n                app.desktop = new Desktop();\n                app.cache = new AppCache();\n                app.storage = new Storage();\n                app.storage.open(cb);\n                app.crypto=crypto;\n                window.MessageSchema=MessageSchema;\n            },\n            function (cb) {\n                app.storage.profiles.get(config.jid, function (err, res) {\n                    if (res) {\n                        profile = res;\n                        profile.jid = {full: config.jid, bare: config.jid};\n                        config.rosterVer = res.rosterVer;\n                    }\n                    cb();\n                });\n            },\n            function (cb) {\n\n                window.onbeforeunload = function () {\n                    if (app.api.sessionStarted) {\n                        app.api.disconnect();\n                    }\n                };\n\n                self.api = window.client = StanzaIO.createClient(config);\n                client.enableKeepAlive({interval:30});\n                client.use(pushNotifications);\n                xmppEventHandlers(self.api, self);\n\n\n                self.api.once('session:started', function () {\n                    app.hasConnected = true;\n                    cb();\n                });\n                self.api.connect();\n\n\n            },\n            function (cb) {\n\n                ChatWebAPIUtils.getAllMessages();\n                ChatWebAPIUtils.getAllChannels();\n\n\n\n\n\n\n\n\n            }\n        ]);\n  }\n\n};\n\n\n\n\n\nexports.launch();\n\n\n  ReactDOM.render(\n                      <Router\n                        history= {history}\n                        onUpdate={() => window.scrollTo(0, 0)}\n                      >\n                        {configRoutes(store)}\n                      </Router>\n                    , document.getElementById('app_container'));\n\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./web/static/js/app/app.js\n **/","import React from 'react';\nimport {\n  Route,\n  Redirect,\n  IndexRoute,\n} from 'react-router';\n\nimport  ChatApp from '../components/chat/ChatApp.react';\n\n\n\nimport SessionsNew   from '../views/sessions/new';\n\n\n// Here we define all our material-ui ReactComponents.\nimport Master from '../components/Master';\nimport Home from '../components/pages/Home';\n\nimport Prerequisites from '../components/pages/get-started/Prerequisites';\nimport Installation from '../components/pages/get-started/Installation';\nimport Usage from '../components/pages/get-started/Usage';\nimport Examples from '../components/pages/get-started/Examples';\nimport ServerRendering from '../components/pages/get-started/ServerRendering';\n\nimport Colors from '../components/pages/customization/Colors';\nimport Themes from '../components/pages/customization/Themes';\nimport InlineStyles from '../components/pages/customization/InlineStyles';\n\nimport AppBarPage from '../components/pages/components/AppBar/Page';\nimport AutoCompletePage from '../components/pages/components/AutoComplete/Page';\nimport AvatarPage from '../components/pages/components/Avatar/Page';\nimport BadgePage from '../components/pages/components/Badge/Page';\nimport CardPage from '../components/pages/components/Card/Page';\nimport CircularProgressPage from '../components/pages/components/CircularProgress/Page';\nimport CheckboxPage from '../components/pages/components/Checkbox/Page';\nimport DatePicker from '../components/pages/components/DatePicker/Page';\nimport DialogPage from '../components/pages/components/Dialog/Page';\nimport DividerPage from '../components/pages/components/Divider/Page';\nimport DrawerPage from '../components/pages/components/Drawer/Page';\nimport DropDownMenuPage from '../components/pages/components/DropDownMenu/Page';\nimport FlatButtonPage from '../components/pages/components/FlatButton/Page';\nimport FloatingActionButtonPage from '../components/pages/components/FloatingActionButton/Page';\nimport FontIconPage from '../components/pages/components/FontIcon/Page';\nimport GridListPage from '../components/pages/components/GridList/Page';\nimport IconButtonPage from '../components/pages/components/IconButton/Page';\nimport IconMenuPage from '../components/pages/components/IconMenu/Page';\nimport ListPage from '../components/pages/components/List/Page';\nimport LinearProgressPage from '../components/pages/components/LinearProgress/Page';\nimport PaperPage from '../components/pages/components/Paper/Page';\nimport MenuPage from '../components/pages/components/Menu/Page';\nimport PopoverPage from '../components/pages/components/Popover/Page';\nimport RaisedButtonPage from '../components/pages/components/RaisedButton/Page';\nimport RefreshIndicatorPage from '../components/pages/components/RefreshIndicator/Page';\nimport RadioButtonPage from '../components/pages/components/RadioButton/Page';\nimport SelectField from '../components/pages/components/SelectField/Page';\nimport SliderPage from '../components/pages/components/Slider/Page';\nimport SnackbarPage from '../components/pages/components/Snackbar/Page';\nimport SvgIconPage from '../components/pages/components/SvgIcon/Page';\nimport SubheaderPage from '../components/pages/components/Subheader/Page';\nimport TablePage from '../components/pages/components/Table/Page';\nimport TabsPage from '../components/pages/components/Tabs/Page';\nimport TextFieldPage from '../components/pages/components/TextField/Page';\nimport TimePickerPage from '../components/pages/components/TimePicker/Page';\nimport TogglePage from '../components/pages/components/Toggle/Page';\nimport ToolbarPage from '../components/pages/components/Toolbar/Page';\n\nimport Community from '../components/pages/discover-more/Community';\nimport Contributing from '../components/pages/discover-more/Contributing';\nimport Showcase from '../components/pages/discover-more/Showcase';\nimport RelatedProjects from '../components/pages/discover-more/RelatedProjects';\n\nimport StepperPage from '../components/pages/components/Stepper/Page';\n\n\n\n\n\n\n/**\n * Routes: https://github.com/rackt/react-router/blob/master/docs/api/components/Route.md\n *\n * Routes are used to declare your view hierarchy.\n *\n * Say you go to http://material-ui.com/#/components/paper\n * The react router will search for a route named 'paper' and will recursively render its\n * handler and its parent handler like so: Paper > Components > Master\n */\nconst AppRoutes = (\n  <Route path=\"/\" component={Master}>\n    <IndexRoute component={Home} />\n    <Route path=\"/sign_in\" component={SessionsNew} />\n    <Route path=\"home\" component={Home} />\n\n    <Redirect from=\"get-started\" to=\"/get-started/prerequisites\" />\n    <Route path=\"get-started\">\n      <Route path=\"prerequisites\" component={Prerequisites} />\n      <Route path=\"installation\" component={Installation} />\n      <Route path=\"usage\" component={Usage} />\n      <Route path=\"examples\" component={Examples} />\n      <Route path=\"server-rendering\" component={ServerRendering} />\n      <Route path=\"chat\" component={ChatApp} />\n    </Route>\n    <Redirect from=\"customization\" to=\"/customization/themes\" />\n    <Route path=\"customization\">\n      <Route path=\"colors\" component={Colors} />\n      <Route path=\"themes\" component={Themes} />\n      <Route path=\"inline-styles\" component={InlineStyles} />\n    </Route>\n    <Redirect from=\"components\" to=\"/components/app-bar\" />\n    <Route path=\"components\">\n      <Route path=\"app-bar\" component={AppBarPage} />\n      <Route path=\"auto-complete\" component={AutoCompletePage} />\n      <Route path=\"avatar\" component={AvatarPage} />\n      <Route path=\"badge\" component={BadgePage} />\n      <Route path=\"card\" component={CardPage} />\n      <Route path=\"circular-progress\" component={CircularProgressPage} />\n      <Route path=\"checkbox\" component={CheckboxPage} />\n      <Route path=\"date-picker\" component={DatePicker} />\n      <Route path=\"dialog\" component={DialogPage} />\n      <Route path=\"divider\" component={DividerPage} />\n      <Route path=\"drawer\" component={DrawerPage} />\n      <Route path=\"dropdown-menu\" component={DropDownMenuPage} />\n      <Route path=\"font-icon\" component={FontIconPage} />\n      <Route path=\"flat-button\" component={FlatButtonPage} />\n      <Route path=\"floating-action-button\" component={FloatingActionButtonPage} />\n      <Route path=\"grid-list\" component={GridListPage} />\n      <Route path=\"icon-button\" component={IconButtonPage} />\n      <Route path=\"icon-menu\" component={IconMenuPage} />\n      <Route path=\"list\" component={ListPage} />\n      <Route path=\"linear-progress\" component={LinearProgressPage} />\n      <Route path=\"paper\" component={PaperPage} />\n      <Route path=\"menu\" component={MenuPage} />\n      <Route path=\"popover\" component={PopoverPage} />\n      <Route path=\"refresh-indicator\" component={RefreshIndicatorPage} />\n      <Route path=\"radio-button\" component={RadioButtonPage} />\n      <Route path=\"raised-button\" component={RaisedButtonPage} />\n      <Route path=\"select-field\" component={SelectField} />\n      <Route path=\"svg-icon\" component={SvgIconPage} />\n      <Route path=\"slider\" component={SliderPage} />\n      <Route path=\"snackbar\" component={SnackbarPage} />\n      <Route path=\"stepper\" component={StepperPage} />\n      <Route path=\"subheader\" component={SubheaderPage} />\n      <Route path=\"table\" component={TablePage} />\n      <Route path=\"tabs\" component={TabsPage} />\n      <Route path=\"text-field\" component={TextFieldPage} />\n      <Route path=\"time-picker\" component={TimePickerPage} />\n      <Route path=\"toggle\" component={TogglePage} />\n      <Route path=\"toolbar\" component={ToolbarPage} />\n    </Route>\n    <Redirect from=\"discover-more\" to=\"/discover-more/community\" />\n    <Route path=\"discover-more\">\n      <Route path=\"community\" component={Community} />\n      <Route path=\"contributing\" component={Contributing} />\n      <Route path=\"showcase\" component={Showcase} />\n      <Route path=\"related-projects\" component={RelatedProjects} />\n    </Route>\n\n  </Route>\n);\n\n\n\n\n\nexport default function configRoutes(store) {\n  const _ensureAuthenticated = (nextState, replace, callback) => {\n    const { dispatch } = store;\n    const { session } = store.getState();\n    const { currentUser } = session;\n\n    if (!currentUser && localStorage.getItem('phoenixAuthToken')) {\n      dispatch(Actions.currentUser());\n    } else if (!localStorage.getItem('phoenixAuthToken')) {\n      replace('/sign_in');\n    }\n\n    callback();\n  };\n\n  return (\n  {AppRoutes}\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./web/static/js/app/routes/index.js\n **/"],"sourceRoot":""}