{"version":3,"sources":["webpack:///./web/static/js/app/components/chat/ThreadListItem.react.js?bfe1"],"names":[],"mappings":";;;;;;;;;;;;;AAcA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AACA;;KAAY;;AACZ;;;;AACA;;;;AACA;;;;;;AAzBA,KAAI,QAAQ,oBAAQ,CAAR,CAAR;AACJ,KAAI,KAAK,oBAAQ,IAAR,CAAL;;AAEJ,KAAI,iBAAiB,MAAM,SAAN;AACrB,KAAI,SAAS,oBAAQ,GAAR,CAAT;AACJ,KAAI,OAAO,OAAO,IAAP;AACX,KAAI,QAAQ,OAAO,KAAP;AACZ,KAAI,eAAe,OAAO,YAAP;AACnB,KAAI,QAAQ,OAAO,KAAP;AACZ,KAAI,WAAS,OAAO,QAAP;;AAkBb,KAAM;UAEK;YACC;oBACQ;;;IAJd;;AAUN,KAAM;sBACyB;2JADzB;;AAQN,KAAI,iBAAiB,MAAM,WAAN,CAAkB;;AAUtC,yCAAe;;AAEZ,UAAK,KAAL,CAAW,OAAX,CAAmB,WAAnB,CAA+B,KAAK,KAAL,CAAW,MAAX,CAAkB,EAAlB,CAA/B,CAFY;IAVuB;;AAerC,gBAAY,uBAAW;AACjB,uBAAQ,KAAR,CAAc,SAAS,WAAT,CAAqB,IAArB,CAAd,EAA0C;AACtC,kBAAW,UAAX;AACA,aAAM,EAAN;AACA,eAAQ,yBAAc,UAAd;MAHZ,EADiB;IAAX;AAOZ,sBAAmB,6BAAU;AACvB,UAAK,WAAL,GADuB;IAAV;;AAKnB,WAAQ,kBAAW;kBACU,KAAK,KAAL,CADV;SACR,uBADQ;SACD,yBADC;;AAEjB,SAAI,cAAc,OAAO,WAAP,CAFD;;AAIb,SAAI;gCAEiC,EAAC,QAAQ,eAAe,UAAf,CAA0B,OAAO,WAAP,CAAmB,IAAnB,CAAlC;OAFlC,CAJS;;AAUf,SAAI,eAAe,IAAf,EACJ;;AAEF;;gBAO+B,YAAY,eAAZ;;4CAEnB,OAAO,IAAP;kBAA0B,EAAC,yBAAD;oBAAsB,YAAY,aAAZ;8CAIlD;6BAGgB;kBACN,KAAK,YAAL;mCACW,OAAO,EAAP;UAZhB,YAAU,OAAO,EAAP;gBAcL;UApBpB,CAFE;MADA,MAiCA;AACI;sBAGW,OAAO,IAAP;kBACJ,KAAK,YAAL;wBACM;SALb,CADJ;MAjCA;IAVI;;EA3BW,CAAjB;;mBA0FW,e","file":"0.0268600f6eb610eee7c0.hot-update.js","sourcesContent":["\n\n\nvar React = require('react');\nvar cx = require('react/lib/cx');\n\nvar ReactPropTypes = React.PropTypes;\nvar Router = require('react-router');\nvar Link = Router.Link;\nvar Route = Router.Route;\nvar RouteHandler = Router.RouteHandler;\nvar State = Router.State;\nvar Redirect=Router.Redirect;\n\nimport {List, ListItem} from 'material-ui/List';\nimport Divider from 'material-ui/Divider';\nimport Subheader from 'material-ui/Subheader';\nimport Avatar from 'material-ui/Avatar';\nimport {grey400, darkBlack, lightBlack} from 'material-ui/styles/colors';\nimport IconButton from 'material-ui/IconButton';\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';\nimport IconMenu from 'material-ui/IconMenu';\nimport MenuItem from 'material-ui/MenuItem';\n\nimport { connect } from 'react-redux'\nimport * as TextFormatting from '../../utils/text_formatting';\nimport ChatConstants from '../../constants/chat_constants'\nimport twemoji from 'twemoji';\nimport {intlShape, injectIntl, defineMessages, FormattedMessage} from 'react-intl';\n\nconst iconButtonElement = (\n  <IconButton\n    touch={true}\n    tooltip=\"more\"\n    tooltipPosition=\"bottom-left\"\n  >\n    <MoreVertIcon color={grey400} />\n  </IconButton>\n);\n\nconst rightIconMenu = (\n  <IconMenu iconButtonElement={iconButtonElement}>\n    <MenuItem>Reply</MenuItem>\n    <MenuItem>Forward</MenuItem>\n    <MenuItem>Delete</MenuItem>\n  </IconMenu>\n);\n\nvar ThreadListItem = React.createClass({\n\n  propTypes: {\n    thread: ReactPropTypes.object,\n    currentChat: ReactPropTypes.object,\n    params: ReactPropTypes.object\n\n  },\n\n\n _handleClick() {\n\n    this.props.actions.clickThread(this.props.thread.id);\n\n  },\n  parseEmojis:function() {\n        twemoji.parse(ReactDOM.findDOMNode(this), {\n            className: 'emoticon',\n            base: '',\n            folder: ChatConstants.EMOJI_PATH\n        });\n    },\n  componentDidMount: function(){\n        this.parseEmojis();\n    },\n\n\n  render: function() {\n      const {thread,actions} = this.props;\n    var lastMessage = thread.lastMessage;\n\n        var p_message = (\n                <span\n                    dangerouslySetInnerHTML={{__html: TextFormatting.formatText(thread.lastMessage.text)}}\n                />\n            );\n\n      if (lastMessage != null)\n      {\n\n    return (\n      <div>\n\n\n\n            <ListItem\n              key={\"thread_\"+thread.id}\n          leftAvatar={<Avatar src={lastMessage.getSenderAvatar()} />}\n          primaryText={\n            <p>{thread.name} <span style={{color: lightBlack}}>{lastMessage.formattedTime()}</span></p>\n          }\n          secondaryText={\n            <p>\n             {p_message}\n            </p>\n          }\n          secondaryTextLines={2}\n               onClick={this._handleClick}\n           value={`/chat/threads/${thread.id}`}\n        />\n        <Divider inset={true} />\n\n    </div>\n\n\n\n\n    );}\n\n      else\n      {\n          return (\n\n    <ListItem\n        primaryText={thread.name}\n        onClick={this._handleClick}\n        insetChildren={true}\n      />\n\n\n          );\n      }\n  }\n\n\n\n});\n\n\n\nexport default ThreadListItem;\n\n\n\n/** WEBPACK FOOTER **\n ** ./web/static/js/app/components/chat/ThreadListItem.react.js\n **/"],"sourceRoot":""}